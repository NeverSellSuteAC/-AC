kind: pipeline #这是固定的，表明这是流水线
name: default #这是当前流水线的名字，可以自己随便取
steps: #这就是编译的步骤了
  - name: MavenBuild_Test #第一步：maven编译
    image: maven:3.6.3-jdk-8 #使用maven3.6.3+JDK8环境，这是官方镜像
    volumes: #定义存储卷，不同于我们的Ceph这里的存储卷是主机路径
      - name: maven_cache #使用存储卷的名称
        path: /root/.m2 #容器的路径，这里面有配置和本地仓库
    commands: #执行命令
      - mvn clean package -DskipTests
    when: #这个步骤的执行条件
      branch: TestLoop  #只有master分支会执行这个步骤
      event: [ push ] #通过push事件触发执行
  - name: NodeBuild_Test #第二部：node编译
    image: node:10.15.3-alpine #采用node 10.15.3版本，和我们本地一致，官方镜像
    volumes: #定义yarn的本地存储，之后全部采用yarn缓存，加速编译
      - name: yarn_cache
        path: /usr/local/share/.cache/yarn/v4
    commands: #执行命令
      - cd ./albedo-ui/
      - yarn config set registry https://registry.npm.taobao.org #淘宝源
      - yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass #淘宝sass
      - yarn install #添加依赖
      - npm run build:test #编译
    when:
      branch: TestLoop
      event: [ push ]
  - name: DockerBuild_Test #第三部：打包docker
    image: plugins/docker #这是Drone官方提供的Docker插件镜像，其实完全可以用官方镜像
    settings:
      username:   #这里的是仓库的用户名
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: registry.cn-shanghai.aliyuncs.com/xunshi/lj-xietong-admin-test #镜像地址
      registry: registry.cn-shanghai.aliyuncs.com #仓库地址
      tags: ${DRONE_BUILD_NUMBER} #tags，这里是Drone的一个变量，也可以使用其他
    when:
      branch: TestLoop
      event: [ push ]
  - name: RancherTest #第四步，通知rancher更新
    image: registry.cn-shanghai.aliyuncs.com/xunshi/rancher-cli:relese
    settings:
      url: https://rancher.saylooks.com/v3
      project: xunshi-test
      namespace: cqlj-kechuang-test
      server: lj-xietong-admin
      image: registry.cn-shanghai.aliyuncs.com/xunshi/lj-xietong-admin-test:${DRONE_BUILD_NUMBER}
      bearer_token:
        from_secret: rancher_token
    when:
      branch: TestLoop
      event: [ push ]
  ## 生产环境build
  - name: MavenBuild #第一步：maven编译
    image: maven:3.6.3-jdk-8 #使用maven3.6.3+JDK8环境，这是官方镜像
    volumes: #定义存储卷，不同于我们的Ceph这里的存储卷是主机路径
      - name: maven_cache #使用存储卷的名称
        path: /root/.m2 #容器的路径，这里面有配置和本地仓库
    commands: #执行命令
      - mvn clean package -DskipTests
    when: #这个步骤的执行条件
      branch: master #只有master分支会执行这个步骤
      event: [ push ] #通过push事件触发执行
  - name: NodeBuild #第二部：node编译
    image: node:10.15.3-alpine #采用node 10.15.3版本，和我们本地一致，官方镜像
    volumes: #定义yarn的本地存储，之后全部采用yarn缓存，加速编译
      - name: yarn_cache
        path: /usr/local/share/.cache/yarn/v4
    commands: #执行命令
      - cd ./albedo-ui/
      - yarn config set registry https://registry.npm.taobao.org #淘宝源
      - yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass #淘宝sass
      - yarn install #添加依赖
      - npm run build:online #编译
    when:
      branch: master
      event: [ push ]
  - name: DockerBuild #第三部：打包docker
    image: plugins/docker #这是Drone官方提供的Docker插件镜像，其实完全可以用官方镜像
    settings:
      username:    #这里的是仓库的用户名
        from_secret: docker_username #from_secret是在Drone页面中对项目配置的一个秘钥
      password:
        from_secret: docker_password
      repo: registry.cn-shanghai.aliyuncs.com/xunshi/lj-xietong-admin #镜像地址
      registry: registry.cn-shanghai.aliyuncs.com #仓库地址
      tags: ${DRONE_BUILD_NUMBER} #tags，这里是Drone的一个变量，也可以使用其他
    when:
      branch: master
      event: [ push ]
  - name: RancherRelese #第四步，通知rancher更新
    image: registry.cn-shanghai.aliyuncs.com/xunshi/rancher-cli:relese
    settings:
      url: https://rancher.saylooks.com/v3
      project: xunshi-online
      namespace: cqlj-kechuang
      server: lj-xietong-admin
      image: registry.cn-shanghai.aliyuncs.com/xunshi/lj-xietong-admin:${DRONE_BUILD_NUMBER}
      bearer_token:
        from_secret: rancher_token
    when:
      branch: master
      event: [ push ]
  - name: DingTalkNotice #第五部，发送消息通知
    image: lddsb/drone-dingtalk-message #Drone官方的钉钉插件
    settings:
      token: fd78f63995afa0cf3ab39829e1eca1469c1bf607bf8b111ad1f5f8f950608d72 #钉钉机器人的token，固定不变
      type: markdown #消息类型
      message_color: true #启用消息颜色
      message_pic: true #启用图片
      sha_link: true #启用链接
    when:
      branch: master
      event: [ push ]
volumes: #这里是存储卷定义
  - name: maven_cache
    host:
      path: /var/lib/cache #定义一个主机路径来存储数据
  - name: yarn_cache
    host:
      path: /var/lib/cache/yarn/v4
